version: '3.8'

services:
  service1:
    image: service1
    build:
      context: ./DBservice
    ports:
      - "3000:3000"
    networks:
      - mynetwork
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongodb:27017/todos
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - QUEUE_NAME=todoQueue
    depends_on:
      - mongodb
      - rabbitmq

  service2:
    image: service2
    build:
      context: ./managerService
    ports:
      - "3001:3001"
    networks:
      - mynetwork
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongodb:27017/todos
      - SERVICE1_URL=http://service1:3000
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - QUEUE_NAME=todoQueue
    depends_on:
      - mongodb
      - service1
      - rabbitmq

  frontend:
    image: front
    build:
      context: ./zionet_project
    ports:
      - "5173:5173"
    networks:
      - mynetwork
    environment:
      - NODE_ENV=production
    depends_on:
      - service1
      - service2

  mongodb:
    image: mongo:4.4
    ports:
      - "27017:27017"
    networks:
      - mynetwork
    volumes:
      - mongo-data:/data/db

  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq
    ports:
      - "5672:5672"  # RabbitMQ AMQP port
      - "15672:15672"  # RabbitMQ management UI port
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  mongo-data:
